const { Client, EmbedBuilder, ActivityType } = require("discord.js");
const fs = require("fs");
const express = require("express");
const app = express();
const {
  selfieID,
  bienvenueID,
  MemeID,
} = require("./config.json");

const client = new Client({
  intents: [3276799],
});

app.get("/", function (request, response) {
  response.sendFile(__dirname + "/index.html");
});

app.use("/ping", (req, res) => {
  res.send(new Date());
});

app.listen(3000, () => {
  console.log("Express is ready.");
});

let welcomeData = {};
try {
  welcomeData = require("./welcomeData.json");
} catch (error) {
  console.error("Erreur lors du chargement du fichier welcomeData.json");
}

client.on("ready", () => {
  console.log(`Connect√© en tant que ${client.user.tag}`);
  client.user.setPresence({
    status: "dnd",
    activities: [
      {
        type: ActivityType.Competing,
        name: "Plan√®te #üå†",
        state: "discord.gg/laplanete",
      },
    ],
  });
});

client.on("guildMemberAdd", async (member) => {
  const welcomeChannel = member.guild.channels.cache.find(
    (channel) => channel.id === bienvenueID,
  );

  if (welcomeChannel) {
    const question = [
      "Quel est ton jeu vid√©o pr√©f√©r√©?",
      "Quel est ton film pr√©f√©r√©?",
      "Quel est ton livre pr√©f√©r√©?",
      "Quel est ton sport pr√©f√©r√©?",
      "Quel est ton r√©seau social pr√©f√©r√©?",
      "Quel est ton animal pr√©f√©r√©?",
      "Tu pr√©f√®res pouvoir voler ou √™tre invisible?",
      "Tu pr√©f√®res voyager dans le pass√© ou voyager dans le futur?",
      "Tu pr√©f√®res vivre sans t√©l√©phone portable ou sans ordinateur?",
      "Tu pr√©f√®res √™tre connu pour ton intelligence ou pour ta gentillesse?",
      "Tu pr√©f√®res r√©soudre un myst√®re criminel ou percer un myst√®re surnaturel?",
      "Tu pr√©f√®res vivre au milieu d'une for√™t ou sur une √Æle d√©serte?",
    ];

    const questrandom = question[Math.floor(Math.random() * question.length)];

    const welcomeEmbed = new EmbedBuilder()
      .setColor("#2a2c31")
      .setDescription(
        `\`\`üëã\`\`„ÉªBienvenue <@${member.user.id}> sur \`\`Plan√®te #üå†\`\` !!\n\`\`‚ùì\`\`„ÉªQuestion du jour, bonjour:\n\`\`üóíÔ∏è\`\`„Éª${questrandom}`,
      );

    const welcomeMessage = await welcomeChannel.send({
      content: `<@${member.user.id}>`,
      embeds: [welcomeEmbed],
    });
    welcomeData[member.id] = welcomeMessage.id;
    saveWelcomeData();
  }
});

client.on("messageCreate", async (message) => {
  if (message.channel.id === MemeID && message.attachments.size > 0) {
    message
      .react("1174373358264131614")
      .then(() => message.react("1174373360805883995"))
      .then(() => message.react("1174373365272805418"))
      .catch(console.error);
  } else if (message.channel.id === MemeID && message.attachments.size === 0) {
  }

  if (message.channel.id === selfieID && message.attachments.size > 0) {
    const threadName = `Selfie de ${message.author.username}`;
    const createdThread = await message.startThread({
      name: threadName,
      autoArchiveDuration: 4320,
    });

    createdThread.send(
      `Bienvenue dans le salon avis selfie de ${message.author.username}`,
    );
  } else if (
    message.channel.id === selfieID &&
    message.attachments.size === 0
  ) {
    message.delete();
    message.author.send(
      `<:attention:1156547323598483598>„Ä°Votre message dans le salon des <#907985342651568220> a √©t√© supprim√© en raison de l'absence de photos ou de vid√©os.`,
    );
  }
});

client.on("guildMemberRemove", async (member) => {
  if (welcomeData[member.id]) {
    const welcomeChannel = member.guild.channels.cache.find(
      (channel) => channel.id === "907985342492192844",
    );

    if (welcomeChannel) {
      welcomeChannel.messages
        .fetch(welcomeData[member.id])
        .then((message) => {
          message.delete();
          delete welcomeData[member.id];
          saveWelcomeData();
        })
        .catch((error) => console.error(error));
    }
  }
});

client.login(process.env.TOKEN);

function saveWelcomeData() {
  fs.writeFileSync(
    "./welcomeData.json",
    JSON.stringify(welcomeData, null, 4),
    "utf-8",
  );
}
